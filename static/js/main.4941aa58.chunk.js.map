{"version":3,"sources":["components/form/Form.js","App.js","index.js"],"names":["genders","id","name","Form","initialFormState","email","password","gender","initialValidateState","useState","data","setData","validation","setValidation","onHandleInputChange","event","currentTarget","value","errors","push","className","type","onChange","map","key","onClick","emailValid","passwordValid","match","alert","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mPAGMA,G,MAAU,CACZ,CACIC,GAAI,EACJC,KAAM,QAEV,CACID,GAAI,EACJC,KAAM,YAIRC,EAAO,WACT,IAAMC,EAAmB,CAACC,MAAO,GAAIC,SAAU,GAAIC,OAAQ,QACrDC,EAAuB,CAACH,OAAO,EAAMC,UAAU,GAFtC,EAISG,mBAASL,GAJlB,mBAIRM,EAJQ,KAIFC,EAJE,OAKqBF,mBAASD,GAL9B,mBAKRI,EALQ,KAKIC,EALJ,KAOTC,EAAsB,SAAAC,GAAU,IAAD,EACXA,EAAMC,cAArBd,EAD0B,EAC1BA,KAAMe,EADoB,EACpBA,MACbN,EAAQ,2BAAID,GAAL,kBAAYR,EAAOe,MAwBxBC,EAAS,GAMf,OALKN,EAAWP,OACZa,EAAOC,KAAK,uBAAGC,UAAU,SAAb,6CACXR,EAAWN,UACZY,EAAOC,KAAK,uBAAGC,UAAU,SAAb,+BAGZ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,uCACA,qEAEHF,EACD,yBAAKE,UAAU,cACX,wCACA,2BACIA,UAAYR,EAAWP,MAAoB,KAAZ,UAC/BH,KAAK,QACLmB,KAAK,OACLJ,MAAOP,EAAKL,MACZiB,SAAUR,KAElB,yBAAKM,UAAU,cACX,2CACA,2BACIA,UAAYR,EAAWN,SAAuB,KAAZ,UAClCJ,KAAK,WACLmB,KAAK,WACLJ,MAAOP,EAAKJ,SACZgB,SAAUR,KAElB,yBAAKM,UAAU,cACX,yCACA,4BACIlB,KAAK,SACLe,MAAOP,EAAKH,OACZe,SAAUR,GACTd,EAAQuB,KAAI,SAAAhB,GAAM,OAAI,4BAAQiB,IAAKjB,EAAON,GAAIgB,MAAOV,EAAOL,MAAOK,EAAOL,WAGnF,4BAAQmB,KAAK,SACLD,UAAU,cACVK,QAhEO,WACnB,IAAIC,EAAYC,EAChB,IAAK,IAAIH,KAAOZ,EACZ,OAAQY,GACJ,IAAK,QACDE,EAAoD,MAAvChB,EAAKL,MAAMuB,MAAM,mBAC9B,MACJ,IAAK,WACDD,EAAkD,MAAlCjB,EAAKJ,SAASsB,MAAM,WAMhDf,EAAc,CAACR,MAAOqB,EAAYpB,SAAUqB,IACxCD,GAAcC,IACdE,MAAM,cACNlB,EAAQP,GACRS,EAAcL,MA4Cd,aCnFG,SAASsB,IACtB,OACI,yBAAKV,UAAU,OACb,kBAAC,EAAD,OCHR,IAAMW,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACD,kBAACL,EAAD,MACJC,K","file":"static/js/main.4941aa58.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./form.css\"\r\n\r\nconst genders = [\r\n    {\r\n        id: 1,\r\n        name: \"Male\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Female\"\r\n    }\r\n];\r\n\r\nconst Form = () => {\r\n    const initialFormState = {email: '', password: '', gender: 'Male'};\r\n    const initialValidateState = {email: true, password: true};\r\n\r\n    const [data, setData] = useState(initialFormState);\r\n    const [validation, setValidation] = useState(initialValidateState);\r\n\r\n    const onHandleInputChange = event => {\r\n        const {name, value} = event.currentTarget;\r\n        setData({...data, [name]: value})\r\n    };\r\n    const onHandleSubmit = () => {\r\n        let emailValid, passwordValid;\r\n        for (let key in validation) {\r\n            switch (key) {\r\n                case 'email':\r\n                    emailValid = data.email.match(/^...+@..+\\...+$/) != null;\r\n                    break;\r\n                case 'password':\r\n                    passwordValid = data.password.match(/^.{6,}$/) != null;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        setValidation({email: emailValid, password: passwordValid});\r\n        if (emailValid && passwordValid) {\r\n            alert('Success!!!');\r\n            setData(initialFormState);\r\n            setValidation(initialValidateState);\r\n        }\r\n    };\r\n\r\n    const errors = [];\r\n    if (!validation.email)\r\n        errors.push(<p className='error'>You have entered a wrong format of email</p>);\r\n    if (!validation.password)\r\n        errors.push(<p className='error'>Your password is too short</p>);\r\n\r\n    return (\r\n        <div className='form'>\r\n            <div className='form-header'>\r\n                <h3>Sign Up</h3>\r\n                <span>Want to sign up fill out this form</span>\r\n            </div>\r\n            {errors}\r\n            <div className='user-input'>\r\n                <label>Email</label>\r\n                <input\r\n                    className={!validation.email ? 'invalid' : null}\r\n                    name='email'\r\n                    type='text'\r\n                    value={data.email}\r\n                    onChange={onHandleInputChange}/>\r\n            </div>\r\n            <div className='user-input'>\r\n                <label>Password</label>\r\n                <input\r\n                    className={!validation.password ? 'invalid' : null}\r\n                    name='password'\r\n                    type=\"password\"\r\n                    value={data.password}\r\n                    onChange={onHandleInputChange}/>\r\n            </div>\r\n            <div className='user-input'>\r\n                <label>Gender</label>\r\n                <select\r\n                    name=\"gender\"\r\n                    value={data.gender}\r\n                    onChange={onHandleInputChange}>\r\n                    {genders.map(gender => <option key={gender.id} value={gender.name}>{gender.name}</option>)}\r\n                </select>\r\n            </div>\r\n            <button type='button'\r\n                    className='sign-up-btn'\r\n                    onClick={onHandleSubmit}>\r\n                Sign Up\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport {Form};\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Form } from \"./components/form\";\r\n\r\nexport default function App() {\r\n  return (\r\n      <div className=\"App\">\r\n        <Form />\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n        <App />,\n    rootElement\n);"],"sourceRoot":""}